<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<%=
  component_wrapper do
    render(Primer::OpenProject::SidePanel::Section.new) do |section|
      section.with_title { I18n.t("storages.health.title") }

      flex_layout do |health_status_container|
        health_status_container.with_row do
          render(Storages::Admin::SidePanel::ValidationResultComponent.new(result: validation_result_placeholder))
        end

        health_status_container.with_row(mt: 2) do
          primer_form_with(
            model:,
            url: validate_connection_admin_settings_storage_connection_validation_path(model),
            method: :post,
            data: { turbo: true }
          ) do
            render(Primer::Beta::Button.new(
              scheme: :link,
              color: :default,
              font_weight: :bold,
              type: :submit,
            )) do |button|
              button.with_leading_visual_icon(icon: "meter")
              I18n.t("storages.health.connection_validation.action")
            end
          end
        end

        if model.automatic_management_enabled?
          health_status_container.with_row(mt: 2) do
            render(Primer::Beta::Text.new(font_weight: :bold)) { I18n.t("storages.health.project_folders.subtitle") }
          end

          health_status_container.with_row(mt: 2) do
            concat(render(Primer::Beta::Text.new(pr: 2, test_selector: "storage-health-checked-at")) do
              I18n.t('storages.health.checked', datetime: helpers.format_time(model.health_checked_at))
            end)

            concat(render(Primer::Beta::Label.new(scheme: health_status_indicator[:scheme], test_selector: "storage-health-status")) do
              health_status_indicator[:label]
            end)
          end

          if model.health_unhealthy?
            health_status_container.with_row(mt: 2) do
              render(Primer::Beta::Text.new(color: :muted, test_selector: "storage-health-error")) do
                formatted_health_reason
              end
            end
          end
        end
      end
    end
  end
%>
