<%=
  component_wrapper(tag: 'turbo-frame') do
    grid_layout('op-storage-view--row', tag: :div, align_items: :center) do |grid|
      grid.with_area(:item, tag: :div, mr: 3) do
        concat(render(Primer::Beta::Text.new(font_weight: :bold, mr: 1, test_selector: 'storage-provider-label')) { I18n.t('storages.file_storage_view.storage_provider') })
        concat(configuration_check_label)
      end

      grid.with_area(:description, tag: :div, color: :subtle, test_selector: 'storage-description') do
        concat(render(Primer::Beta::Text.new) { storage_description })
        if can_show_open_link?
          concat(render(Primer::Beta::Text.new) { " - " })
          concat(render(Primer::Beta::Link.new(href: open_href, target: "_blank")) do |link|
            link.with_trailing_visual_icon(icon: "link-external", size: :small)
            I18n.t('storages.buttons.open_storage')
          end)
        end
      end

      if editable_storage?
        grid.with_area(:"icon-button", tag: :div, color: :muted) do
          flex_layout(justify_content: :flex_end) do |icons_container|
            icons_container.with_column do
              render(
                Primer::Beta::IconButton.new(
                  icon: :pencil,
                  tag: :a,
                  scheme: :invisible,
                  href: edit_host_admin_settings_storage_path(storage),
                  aria: { label: I18n.t('storages.label_edit_storage_host') },
                  test_selector: 'storage-edit-host-button',
                  data: { turbo_stream: true }
                )
              )
            end
          end
        end
      end
    end
  end
%>
