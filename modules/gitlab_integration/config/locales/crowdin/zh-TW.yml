#-- copyright
#OpenProject is an open source project management software.
#Copyright (C) 2023 Ben Tey
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License version 3.
#OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
#Copyright (C) 2006-2013 Jean-Philippe Lang
#Copyright (C) 2010-2013 the ChiliProject Team
#Copyright (C) the OpenProject GmbH
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#See docs/COPYRIGHT.rdoc for more details.
#++
zh-TW:
  activerecord:
    errors:
      models:
        gitlab_issue:
          attributes:
            labels:
              invalid_schema: "必須是一個帶值的雜湊陣列：color、title"
        gitlab_merge_request:
          attributes:
            labels:
              invalid_schema: "必須是一個帶值的雜湊陣列：color、title"
  project_module_gitlab: "GitLab"
  permission_show_gitlab_content: "顯示 GitLab內容"
  gitlab_integration:
    merge_request_opened_comment: >
      **MR 已開啟：** [%{repository}](%{repository_url}) 的合併請求 %{mr_number} [%{mr_title}](%{mr_url}) 已由 [%{gitlab_user}](%{gitlab_user_url}).。
    merge_request_closed_comment: >
      **MR 已關閉：** [%{repository}](%{repository_url}) 的合併請求 %{mr_number} [%{mr_title}](%{mr_url}) 已被 [%{gitlab_user}](%{gitlab_user_url}) 關閉。
    merge_request_merged_comment: >
      **MR 已合併：** [%{repository}](%{repository_url}) 的合併請求 %{mr_number} [%{mr_title}](%{mr_url}) 已被 [%{gitlab_user}](%{gitlab_user_url}) 合併。
    merge_request_reopened_comment: >
      **MR 已重新開啟：** [%{repository}](%{repository_url}) 的合併請求 %{mr_number} [%{mr_title}](%{mr_url}) 已被 [%{gitlab_user}](%{gitlab_user_url}) 重新開啟。
    note_commit_referenced_comment: >
      **在commit中引用：** [%{gitlab_user}](%{gitlab_user_url}) 引用了此WP於Commit Note [%{repository}](%{repository_url}) 在 [%{commit_id}](%{commit_url}) 上: %{commit_note}
    note_mr_referenced_comment: >
      **在MR 引用：** [%{gitlab_user}](%{gitlab_user_url}) 在合併請求%{mr_number} [%{mr_title}](%{mr_url}) 中引用了此WP在 [%{repository}](%{repository_url}) 上: %{mr_note}
    note_mr_commented_comment: >
      ** 在 MR 中評論：** [%{gitlab_user}](%{gitlab_user_url}) 在合併請求 %{mr_number} [%{mr_title}](%{mr_url}) 對 [%{repository}](%{repository_url}) 評論了此 WP： %{mr_note}
    note_issue_referenced_comment: >
      ** 在 Issue 中引用：** [%{gitlab_user}](%{gitlab_user_url}) 引用了此 WP，於 Issue %{issue_number} [%{issue_title}](%{issue_url}) 在 [%{repository}](%{repository_url}) 上： %{issue_note}
    note_issue_commented_comment: >
      ** 在 Issue 中註解：** [%{gitlab_user}](%{gitlab_user_url}) 註解此 WP於 Issue %{issue_number} [%{issue_title}](%{issue_url}) 在 [%{repository}](%{repository_url}) 上 ： %{issue_note}
    note_snippet_referenced_comment: >
      ** 在 Snippet 中被引用：** [%{gitlab_user}](%{gitlab_user_url}) 引用了此 WP於 Snippet %{snippet_number} [%{snippet_title}](%{snippet_url}) 在 [%{repository}](%{repository_url}) 上： %{snippet_note}
    issue_opened_referenced_comment: >
      ** 問題已開啟：** 問題 %{issue_number} [%{issue_title}](%{issue_url}) for [%{repository}](%{repository_url}) 已由 [%{gitlab_user}](%{gitlab_user_url}) 開啟。
    issue_closed_referenced_comment: >
      ** 問題關閉：** 問題 %{issue_number} [%{issue_title}](%{issue_url}) 為 [%{repository}](%{repository_url}) 已被 [%{gitlab_user}](%{gitlab_user_url}) 關閉。
    issue_reopened_referenced_comment: >
      ** 問題重新開啟：** 問題 %{issue_number} [%{issue_title}](%{issue_url}) 為 [%{repository}](%{repository_url}) 已由 [%{gitlab_user}](%{gitlab_user_url}) 重新開啟。
    push_single_commit_comment: >
      ** 在 MR 中推送：** [%{gitlab_user}](%{gitlab_user_url}) 推送 [%{commit_number}](%{commit_url}) 到 [%{repository}](%{repository_url}) 在 %{commit_timestamp}: %{commit_note}
    push_single_commit_comment_with_ref: >
      ** 推送在 %{reference}:** [%{gitlab_user}](%{gitlab_user_url}) 推送 [%{commit_number}](%{commit_url}) 到 [%{repository}](%{repository_url}) 在 %{commit_timestamp}: %{commit_note}
    push_multiple_commits_comment: >
      ** 在 MR 中推送：** [%{gitlab_user}](%{gitlab_user_url}) 推送了多個提交 [%{commit_number}](%{commit_url}) 到 [%{repository}](%{repository_url}) 在 %{commit_timestamp}: %{commit_note}
