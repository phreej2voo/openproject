#-- copyright
#OpenProject is an open source project management software.
#Copyright (C) 2023 Ben Tey
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License version 3.
#OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
#Copyright (C) 2006-2013 Jean-Philippe Lang
#Copyright (C) 2010-2013 the ChiliProject Team
#Copyright (C) the OpenProject GmbH
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#See docs/COPYRIGHT.rdoc for more details.
#++
pl:
  activerecord:
    errors:
      models:
        gitlab_issue:
          attributes:
            labels:
              invalid_schema: "musi być tablicą skrótów z kluczami: color, title"
        gitlab_merge_request:
          attributes:
            labels:
              invalid_schema: "musi być tablicą skrótów z kluczami: color, title"
  project_module_gitlab: "GitLab"
  permission_show_gitlab_content: "Pokaż treść GitLab"
  gitlab_integration:
    merge_request_opened_comment: >
      **Otwarto MR:** żądanie scalenia %{mr_number} [%{mr_title}](%{mr_url}) dla [%{repository}](%{repository_url}) zostało otwarte przez [%{gitlab_user}](%{gitlab_user_url}).
    merge_request_closed_comment: >
      **Zamknięto MR:** żądanie scalenia %{mr_number} [%{mr_title}](%{mr_url}) dla [%{repository}](%{repository_url}) zostało zamknięte przez [%{gitlab_user}](%{gitlab_user_url}).
    merge_request_merged_comment: >
      **Scalono MR:** żądanie scalenia %{mr_number} [%{mr_title}](%{mr_url}) dla [%{repository}](%{repository_url}) zostało scalone przez [%{gitlab_user}](%{gitlab_user_url}).
    merge_request_reopened_comment: >
      **Ponownie otwarto MR:** żądanie scalenia %{mr_number} [%{mr_title}](%{mr_url}) dla [%{repository}](%{repository_url}) zostało ponownie otwarte przez [%{gitlab_user}](%{gitlab_user_url}).
    note_commit_referenced_comment: >
      **Odniesienie w zatwierdzeniu:** [%{gitlab_user}](%{gitlab_user_url}) odniósł się do tego WP w uwadze do zatwierdzenia [%{commit_id}](%{commit_url}) na [%{repository}](%{repository_url}): %{commit_note}
    note_mr_referenced_comment: >
      **Odniesienie w MR:** użytkownik [%{gitlab_user}](%{gitlab_user_url}) odniósł się do tego WP w żądaniu scalenia %{mr_number} [%{mr_title}](%{mr_url}) na [%{repository}](%{repository_url}): %{mr_note}
    note_mr_commented_comment: >
      **Komentarz w MR:** użytkownik [%{gitlab_user}](%{gitlab_user_url}) skomentował WP w żądaniu scalenia %{mr_number} [%{mr_title}](%{mr_url}) na [%{repository}](%{repository_url}): %{mr_note}
    note_issue_referenced_comment: >
      **Odniesienia w problemie:** użytkownik [%{gitlab_user}](%{gitlab_user_url}) odniósł się do tego WP w problemie %{issue_number} [%{issue_title}](%{issue_url}) na [%{repository}](%{repository_url}): %{issue_note}
    note_issue_commented_comment: >
      **Komentarz w problemie:** użytkownik [%{gitlab_user}](%{gitlab_user_url}) skomentował WP w problemie %{issue_number} [%{issue_title}](%{issue_url}) na [%{repository}](%{repository_url}): %{issue_note}
    note_snippet_referenced_comment: >
      **Odniesienie we fragmencie kodu:** użytkownik [%{gitlab_user}](%{gitlab_user_url}) odniós się do WP we fragmencie kodu %{snippet_number} [%{snippet_title}](%{snippet_url}) na [%{repository}](%{repository_url}): %{snippet_note}
    issue_opened_referenced_comment: >
      **Otwarto problem:** problem %{issue_number} [%{issue_title}](%{issue_url}) dotyczący [%{repository}](%{repository_url}) został otwarty przez [%{gitlab_user}](%{gitlab_user_url}).
    issue_closed_referenced_comment: >
      **Zamknięto problem:** problem %{issue_number} [%{issue_title}](%{issue_url}) dotyczący [%{repository}](%{repository_url}) został zamknięty przez [%{gitlab_user}](%{gitlab_user_url}).
    issue_reopened_referenced_comment: >
      **Ponownie otwarto problem:** problem %{issue_number} [%{issue_title}](%{issue_url}) dotyczący [%{repository}](%{repository_url}) został ponownie otwarty przez [%{gitlab_user}](%{gitlab_user_url}).
    push_single_commit_comment: >
      **Wypchnięto w MR:** użytkownik [%{gitlab_user}](%{gitlab_user_url}) wypchnął [%{commit_number}](%{commit_url}) do [%{repository}](%{repository_url}) o %{commit_timestamp}: %{commit_note}
    push_single_commit_comment_with_ref: >
      **Wypchnięto w %{reference}:** użytkownik [%{gitlab_user}](%{gitlab_user_url}) wypchnął [%{commit_number}](%{commit_url}) do [%{repository}](%{repository_url}) o %{commit_timestamp}: %{commit_note}
    push_multiple_commits_comment: >
      **Wypchnięto w MR:** [%{gitlab_user}](%{gitlab_user_url}) wypchnął wiele zmian [%{commit_number}](%{commit_url}) do [%{repository}](%{repository_url}) o %{commit_timestamp}: %{commit_note}
